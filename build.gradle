plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.swyp.plogging'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.redisson:redisson-spring-boot-starter:3.23.1'
	runtimeOnly 'org.postgresql:postgresql:42.7.5'
	// PostGIS 지원을 위한 의존성 추가
	implementation 'org.hibernate:hibernate-spatial:6.2.6.Final'

	// firebase admin sdk
	implementation 'com.google.firebase:firebase-admin:9.4.3'

	// Json Date and Time Module
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.3'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Springdoc 추가
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// test
	testImplementation "org.testcontainers:junit-jupiter:1.21.3"
	testImplementation "org.testcontainers:testcontainers:1.21.3"
	testImplementation "org.testcontainers:postgresql:1.21.3"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
//	testImplementation 'com.h2database:h2'


}

tasks.named('test') {
	useJUnitPlatform()

	// 로그 파일 설정 (테스트 시에만 적용)
	systemProperty "logging.file.name", "logs/test.log"
	systemProperty "logging.level.root", "INFO"
	systemProperty "spring.profiles.active", "test"
}

def querydslDir = "build/generated/querydsl"

sourceSets {
	main {
		java {
			srcDirs += [querydslDir]
		}
	}
	test {
		java {
			srcDirs += [querydslDir]
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}